!function($){"use strict";function forEach(array,callback){for(var index=0;index<array.length;++index)callback(array[index],index)}function Multiselect(select,options){this.$select=$(select),this.$select.attr("data-placeholder")&&(options.nonSelectedText=this.$select.data("placeholder")),this.options=this.mergeOptions($.extend({},options,this.$select.data())),this.originalOptions=this.$select.clone()[0].options,this.query="",this.searchTimeout=null,this.lastToggledInput=null,this.options.multiple="multiple"===this.$select.attr("multiple"),this.options.onChange=$.proxy(this.options.onChange,this),this.options.onDropdownShow=$.proxy(this.options.onDropdownShow,this),this.options.onDropdownHide=$.proxy(this.options.onDropdownHide,this),this.options.onDropdownShown=$.proxy(this.options.onDropdownShown,this),this.options.onDropdownHidden=$.proxy(this.options.onDropdownHidden,this),this.buildContainer(),this.buildButton(),this.buildDropdown(),this.buildSelectAll(),this.buildDropdownOptions(),this.buildFilter(),this.updateButtonText(),this.updateSelectAll(),this.options.disableIfEmpty&&$("option",this.$select).length<=0&&this.disable(),this.$select.hide().after(this.$container)}"undefined"!=typeof ko&&ko.bindingHandlers&&!ko.bindingHandlers.multiselect&&(ko.bindingHandlers.multiselect={after:["options","value","selectedOptions"],init:function(element,valueAccessor,allBindings,viewModel,bindingContext){var $element=$(element),config=ko.toJS(valueAccessor());if($element.multiselect(config),allBindings.has("options")){var options=allBindings.get("options");ko.isObservable(options)&&ko.computed({read:function(){options(),setTimeout(function(){var ms=$element.data("multiselect");ms&&ms.updateOriginalOptions(),$element.multiselect("rebuild")},1)},disposeWhenNodeIsRemoved:element})}if(allBindings.has("value")){var value=allBindings.get("value");ko.isObservable(value)&&ko.computed({read:function(){value(),setTimeout(function(){$element.multiselect("refresh")},1)},disposeWhenNodeIsRemoved:element}).extend({rateLimit:100,notifyWhenChangesStop:!0})}if(allBindings.has("selectedOptions")){var selectedOptions=allBindings.get("selectedOptions");ko.isObservable(selectedOptions)&&ko.computed({read:function(){selectedOptions(),setTimeout(function(){$element.multiselect("refresh")},1)},disposeWhenNodeIsRemoved:element}).extend({rateLimit:100,notifyWhenChangesStop:!0})}ko.utils.domNodeDisposal.addDisposeCallback(element,function(){$element.multiselect("destroy")})},update:function(element,valueAccessor,allBindings,viewModel,bindingContext){var $element=$(element),config=ko.toJS(valueAccessor());$element.multiselect("setOptions",config),$element.multiselect("rebuild")}}),Multiselect.prototype={defaults:{buttonText:function(options,select){if(0===options.length)return this.nonSelectedText;if(this.allSelectedText&&options.length===$("option",$(select)).length&&1!==$("option",$(select)).length&&this.multiple)return this.selectAllNumber?this.allSelectedText+" ("+options.length+")":this.allSelectedText;if(options.length>this.numberDisplayed)return options.length+" "+this.nSelectedText;var selected="",delimiter=this.delimiterText;return options.each(function(){var label=void 0!==$(this).attr("label")?$(this).attr("label"):$(this).text();selected+=label+delimiter}),selected.substr(0,selected.length-2)},buttonTitle:function(options,select){if(0===options.length)return this.nonSelectedText;var selected="",delimiter=this.delimiterText;return options.each(function(){var label=void 0!==$(this).attr("label")?$(this).attr("label"):$(this).text();selected+=label+delimiter}),selected.substr(0,selected.length-2)},optionLabel:function(element){return $(element).attr("label")||$(element).text()},onChange:function(option,checked){},onDropdownShow:function(event){},onDropdownHide:function(event){},onDropdownShown:function(event){},onDropdownHidden:function(event){},onSelectAll:function(){},enableHTML:!1,buttonClass:"btn btn-default",inheritClass:!1,buttonWidth:"auto",buttonContainer:'<div class="btn-group" />',dropRight:!1,selectedClass:"active",maxHeight:!1,checkboxName:!1,includeSelectAllOption:!1,includeSelectAllIfMoreThan:0,selectAllText:" Select all",selectAllValue:"multiselect-all",selectAllName:!1,selectAllNumber:!0,enableFiltering:!1,enableCaseInsensitiveFiltering:!1,enableClickableOptGroups:!1,filterPlaceholder:"Search",filterBehavior:"text",includeFilterClearBtn:!0,preventInputChangeEvent:!1,nonSelectedText:"None selected",nSelectedText:"selected",allSelectedText:"All selected",numberDisplayed:3,disableIfEmpty:!1,delimiterText:", ",templates:{button:'<button type="button" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> <b class="caret"></b></button>',ul:'<ul class="multiselect-container dropdown-menu"></ul>',filter:'<li class="multiselect-item filter"><div class="input-group"><span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span><input class="form-control multiselect-search" type="text"></div></li>',filterClearBtn:'<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="glyphicon glyphicon-remove-circle"></i></button></span>',li:'<li><a tabindex="0"><label></label></a></li>',divider:'<li class="multiselect-item divider"></li>',liGroup:'<li class="multiselect-item multiselect-group"><label></label></li>'}},constructor:Multiselect,buildContainer:function(){this.$container=$(this.options.buttonContainer),this.$container.on("show.bs.dropdown",this.options.onDropdownShow),this.$container.on("hide.bs.dropdown",this.options.onDropdownHide),this.$container.on("shown.bs.dropdown",this.options.onDropdownShown),this.$container.on("hidden.bs.dropdown",this.options.onDropdownHidden)},buildButton:function(){this.$button=$(this.options.templates.button).addClass(this.options.buttonClass),this.$select.attr("class")&&this.options.inheritClass&&this.$button.addClass(this.$select.attr("class")),this.$select.prop("disabled")?this.disable():this.enable(),this.options.buttonWidth&&"auto"!==this.options.buttonWidth&&(this.$button.css({width:this.options.buttonWidth,overflow:"hidden","text-overflow":"ellipsis"}),this.$container.css({width:this.options.buttonWidth}));var tabindex=this.$select.attr("tabindex");tabindex&&this.$button.attr("tabindex",tabindex),this.$container.prepend(this.$button)},buildDropdown:function(){this.$ul=$(this.options.templates.ul),this.options.dropRight&&this.$ul.addClass("pull-right"),this.options.maxHeight&&this.$ul.css({"max-height":this.options.maxHeight+"px","overflow-y":"auto","overflow-x":"hidden"}),this.$container.append(this.$ul)},buildDropdownOptions:function(){this.$select.children().each($.proxy(function(index,element){var $element=$(element),tag=$element.prop("tagName").toLowerCase();$element.prop("value")!==this.options.selectAllValue&&("optgroup"===tag?this.createOptgroup(element):"option"===tag&&("divider"===$element.data("role")?this.createDivider():this.createOptionValue(element)))},this)),$("li input",this.$ul).on("change",$.proxy(function(event){var $target=$(event.target),checked=$target.prop("checked")||!1,isSelectAllOption=$target.val()===this.options.selectAllValue;this.options.selectedClass&&(checked?$target.closest("li").addClass(this.options.selectedClass):$target.closest("li").removeClass(this.options.selectedClass));var value=$target.val(),$option=this.getOptionByValue(value),$optionsNotThis=$("option",this.$select).not($option),$checkboxesNotThis=$("input",this.$container).not($target);if(isSelectAllOption&&(checked?this.selectAll():this.deselectAll()),isSelectAllOption||(checked?($option.prop("selected",!0),this.options.multiple?$option.prop("selected",!0):(this.options.selectedClass&&$($checkboxesNotThis).closest("li").removeClass(this.options.selectedClass),$($checkboxesNotThis).prop("checked",!1),$optionsNotThis.prop("selected",!1),this.$button.click()),"active"===this.options.selectedClass&&$optionsNotThis.closest("a").css("outline","")):$option.prop("selected",!1)),this.$select.change(),this.updateButtonText(),this.updateSelectAll(),this.options.onChange($option,checked),this.options.preventInputChangeEvent)return!1},this)),$("li a",this.$ul).on("mousedown",function(e){if(e.shiftKey)return!1}),$("li a",this.$ul).on("touchstart click",$.proxy(function(event){event.stopPropagation();var $target=$(event.target);if(event.shiftKey&&this.options.multiple){$target.is("label")&&(event.preventDefault(),$target=$target.find("input"),$target.prop("checked",!$target.prop("checked")));var checked=$target.prop("checked")||!1;if(null!==this.lastToggledInput&&this.lastToggledInput!==$target){var from=$target.closest("li").index(),to=this.lastToggledInput.closest("li").index();if(from>to){var tmp=to;to=from,from=tmp}++to;var range=this.$ul.find("li").slice(from,to).find("input");range.prop("checked",checked),this.options.selectedClass&&range.closest("li").toggleClass(this.options.selectedClass,checked);for(var i=0,j=range.length;i<j;i++){var $checkbox=$(range[i]),$option=this.getOptionByValue($checkbox.val());$option.prop("selected",checked)}}$target.trigger("change")}$target.is("input")&&!$target.closest("li").is(".multiselect-item")&&(this.lastToggledInput=$target),$target.blur()},this)),this.$container.off("keydown.multiselect").on("keydown.multiselect",$.proxy(function(event){if(!$('input[type="text"]',this.$container).is(":focus"))if(9===event.keyCode&&this.$container.hasClass("open"))this.$button.click();else{var $items=$(this.$container).find("li:not(.divider):not(.disabled) a").filter(":visible");if(!$items.length)return;var index=$items.index($items.filter(":focus"));38===event.keyCode&&index>0?index--:40===event.keyCode&&index<$items.length-1?index++:~index||(index=0);var $current=$items.eq(index);if($current.focus(),32===event.keyCode||13===event.keyCode){var $checkbox=$current.find("input");$checkbox.prop("checked",!$checkbox.prop("checked")),$checkbox.change()}event.stopPropagation(),event.preventDefault()}},this)),this.options.enableClickableOptGroups&&this.options.multiple&&$("li.multiselect-group",this.$ul).on("click",$.proxy(function(event){event.stopPropagation();var group=$(event.target).parent(),$options=group.nextUntil("li.multiselect-group"),$visibleOptions=$options.filter(":visible:not(.disabled)"),allChecked=!0,optionInputs=$visibleOptions.find("input");optionInputs.each(function(){allChecked=allChecked&&$(this).prop("checked")}),optionInputs.prop("checked",!allChecked).trigger("change")},this))},createOptionValue:function(element){var $element=$(element);$element.is(":selected")&&$element.prop("selected",!0);var label=this.options.optionLabel(element),value=$element.val(),inputType=this.options.multiple?"checkbox":"radio",$li=$(this.options.templates.li),$label=$("label",$li);$label.addClass(inputType),this.options.enableHTML?$label.html(" "+label):$label.text(" "+label);var $checkbox=$("<input/>").attr("type",inputType);this.options.checkboxName&&$checkbox.attr("name",this.options.checkboxName),$label.prepend($checkbox);var selected=$element.prop("selected")||!1;$checkbox.val(value),value===this.options.selectAllValue&&($li.addClass("multiselect-item multiselect-all"),$checkbox.parent().parent().addClass("multiselect-all")),$label.attr("title",$element.attr("title")),this.$ul.append($li),$element.is(":disabled")&&$checkbox.attr("disabled","disabled").prop("disabled",!0).closest("a").attr("tabindex","-1").closest("li").addClass("disabled"),$checkbox.prop("checked",selected),selected&&this.options.selectedClass&&$checkbox.closest("li").addClass(this.options.selectedClass)},createDivider:function(element){var $divider=$(this.options.templates.divider);this.$ul.append($divider)},createOptgroup:function(group){var groupName=$(group).prop("label"),$li=$(this.options.templates.liGroup);this.options.enableHTML?$("label",$li).html(groupName):$("label",$li).text(groupName),this.options.enableClickableOptGroups&&$li.addClass("multiselect-group-clickable"),this.$ul.append($li),$(group).is(":disabled")&&$li.addClass("disabled"),$("option",group).each($.proxy(function(index,element){this.createOptionValue(element)},this))},buildSelectAll:function(){"number"==typeof this.options.selectAllValue&&(this.options.selectAllValue=this.options.selectAllValue.toString());var alreadyHasSelectAll=this.hasSelectAll();if(!alreadyHasSelectAll&&this.options.includeSelectAllOption&&this.options.multiple&&$("option",this.$select).length>this.options.includeSelectAllIfMoreThan){this.options.includeSelectAllDivider&&this.$ul.prepend($(this.options.templates.divider));var $li=$(this.options.templates.li);$("label",$li).addClass("checkbox"),this.options.enableHTML?$("label",$li).html(" "+this.options.selectAllText):$("label",$li).text(" "+this.options.selectAllText),this.options.selectAllName?$("label",$li).prepend('<input type="checkbox" name="'+this.options.selectAllName+'" />'):$("label",$li).prepend('<input type="checkbox" />');var $checkbox=$("input",$li);$checkbox.val(this.options.selectAllValue),$li.addClass("multiselect-item multiselect-all"),$checkbox.parent().parent().addClass("multiselect-all"),this.$ul.prepend($li),$checkbox.prop("checked",!1)}},buildFilter:function(){if(this.options.enableFiltering||this.options.enableCaseInsensitiveFiltering){var enableFilterLength=Math.max(this.options.enableFiltering,this.options.enableCaseInsensitiveFiltering);if(this.$select.find("option").length>=enableFilterLength){if(this.$filter=$(this.options.templates.filter),$("input",this.$filter).attr("placeholder",this.options.filterPlaceholder),this.options.includeFilterClearBtn){var clearBtn=$(this.options.templates.filterClearBtn);clearBtn.on("click",$.proxy(function(event){clearTimeout(this.searchTimeout),this.$filter.find(".multiselect-search").val(""),$("li",this.$ul).show().removeClass("filter-hidden"),this.updateSelectAll()},this)),this.$filter.find(".input-group").append(clearBtn)}this.$ul.prepend(this.$filter),this.$filter.val(this.query).on("click",function(event){event.stopPropagation()}).on("input keydown",$.proxy(function(event){13===event.which&&event.preventDefault(),clearTimeout(this.searchTimeout),this.searchTimeout=this.asyncFunction($.proxy(function(){var currentGroup,currentGroupVisible;this.query!==event.target.value&&(this.query=event.target.value,$.each($("li",this.$ul),$.proxy(function(index,element){var value=$("input",element).length>0?$("input",element).val():"",text=$("label",element).text(),filterCandidate="";if("text"===this.options.filterBehavior?filterCandidate=text:"value"===this.options.filterBehavior?filterCandidate=value:"both"===this.options.filterBehavior&&(filterCandidate=text+"\n"+value),value!==this.options.selectAllValue&&text){var showElement=!1;this.options.enableCaseInsensitiveFiltering&&filterCandidate.toLowerCase().indexOf(this.query.toLowerCase())>-1?showElement=!0:filterCandidate.indexOf(this.query)>-1&&(showElement=!0),$(element).toggle(showElement).toggleClass("filter-hidden",!showElement),$(element).hasClass("multiselect-group")?(currentGroup=element,currentGroupVisible=showElement):(showElement&&$(currentGroup).show().removeClass("filter-hidden"),!showElement&&currentGroupVisible&&$(element).show().removeClass("filter-hidden"))}},this)));this.updateSelectAll()},this),300,this)},this))}}},destroy:function(){this.$container.remove(),this.$select.show(),this.$select.data("multiselect",null)},refresh:function(){$("option",this.$select).each($.proxy(function(index,element){var $input=$("li input",this.$ul).filter(function(){return $(this).val()===$(element).val()});$(element).is(":selected")?($input.prop("checked",!0),this.options.selectedClass&&$input.closest("li").addClass(this.options.selectedClass)):($input.prop("checked",!1),this.options.selectedClass&&$input.closest("li").removeClass(this.options.selectedClass)),$(element).is(":disabled")?$input.attr("disabled","disabled").prop("disabled",!0).closest("li").addClass("disabled"):$input.prop("disabled",!1).closest("li").removeClass("disabled")},this)),this.updateButtonText(),this.updateSelectAll()},select:function(selectValues,triggerOnChange){$.isArray(selectValues)||(selectValues=[selectValues]);for(var i=0;i<selectValues.length;i++){var value=selectValues[i];if(null!=value){var $option=this.getOptionByValue(value),$checkbox=this.getInputByValue(value);void 0!==$option&&void 0!==$checkbox&&(this.options.multiple||this.deselectAll(!1),this.options.selectedClass&&$checkbox.closest("li").addClass(this.options.selectedClass),$checkbox.prop("checked",!0),$option.prop("selected",!0),triggerOnChange&&this.options.onChange($option,!0))}}this.updateButtonText(),this.updateSelectAll()},clearSelection:function(){this.deselectAll(!1),this.updateButtonText(),this.updateSelectAll()},deselect:function(deselectValues,triggerOnChange){$.isArray(deselectValues)||(deselectValues=[deselectValues]);for(var i=0;i<deselectValues.length;i++){var value=deselectValues[i];if(null!=value){var $option=this.getOptionByValue(value),$checkbox=this.getInputByValue(value);void 0!==$option&&void 0!==$checkbox&&(this.options.selectedClass&&$checkbox.closest("li").removeClass(this.options.selectedClass),$checkbox.prop("checked",!1),$option.prop("selected",!1),triggerOnChange&&this.options.onChange($option,!1))}}this.updateButtonText(),this.updateSelectAll()},selectAll:function(justVisible,triggerOnSelectAll){justVisible=void 0===justVisible||justVisible;var allCheckboxes=$("li input[type='checkbox']:enabled",this.$ul),visibleCheckboxes=allCheckboxes.filter(":visible"),allCheckboxesCount=allCheckboxes.length,visibleCheckboxesCount=visibleCheckboxes.length;if(justVisible?(visibleCheckboxes.prop("checked",!0),$("li:not(.divider):not(.disabled)",this.$ul).filter(":visible").addClass(this.options.selectedClass)):(allCheckboxes.prop("checked",!0),$("li:not(.divider):not(.disabled)",this.$ul).addClass(this.options.selectedClass)),allCheckboxesCount===visibleCheckboxesCount||!1===justVisible)$("option:enabled",this.$select).prop("selected",!0);else{var values=visibleCheckboxes.map(function(){return $(this).val()}).get();$("option:enabled",this.$select).filter(function(index){return-1!==$.inArray($(this).val(),values)}).prop("selected",!0)}triggerOnSelectAll&&this.options.onSelectAll()},deselectAll:function(justVisible){justVisible=void 0===justVisible||justVisible;if(justVisible){var visibleCheckboxes=$("li input[type='checkbox']:not(:disabled)",this.$ul).filter(":visible");visibleCheckboxes.prop("checked",!1);var values=visibleCheckboxes.map(function(){return $(this).val()}).get();$("option:enabled",this.$select).filter(function(index){return-1!==$.inArray($(this).val(),values)}).prop("selected",!1),this.options.selectedClass&&$("li:not(.divider):not(.disabled)",this.$ul).filter(":visible").removeClass(this.options.selectedClass)}else $("li input[type='checkbox']:enabled",this.$ul).prop("checked",!1),$("option:enabled",this.$select).prop("selected",!1),this.options.selectedClass&&$("li:not(.divider):not(.disabled)",this.$ul).removeClass(this.options.selectedClass)},rebuild:function(){this.$ul.html(""),this.options.multiple="multiple"===this.$select.attr("multiple"),this.buildSelectAll(),this.buildDropdownOptions(),this.buildFilter(),this.updateButtonText(),this.updateSelectAll(),this.options.disableIfEmpty&&$("option",this.$select).length<=0?this.disable():this.enable(),this.options.dropRight&&this.$ul.addClass("pull-right")},dataprovider:function(dataprovider){var groupCounter=0,$select=this.$select.empty();$.each(dataprovider,function(index,option){var $tag;$.isArray(option.children)?(groupCounter++,$tag=$("<optgroup/>").attr({label:option.label||"Group "+groupCounter,disabled:!!option.disabled}),forEach(option.children,function(subOption){$tag.append($("<option/>").attr({value:subOption.value,label:subOption.label||subOption.value,title:subOption.title,selected:!!subOption.selected,disabled:!!subOption.disabled}))})):$tag=$("<option/>").attr({value:option.value,label:option.label||option.value,title:option.title,selected:!!option.selected,disabled:!!option.disabled}),$select.append($tag)}),this.rebuild()},enable:function(){this.$select.prop("disabled",!1),this.$button.prop("disabled",!1).removeClass("disabled")},disable:function(){this.$select.prop("disabled",!0),this.$button.prop("disabled",!0).addClass("disabled")},setOptions:function(options){this.options=this.mergeOptions(options)},mergeOptions:function(options){return $.extend(!0,{},this.defaults,this.options,options)},hasSelectAll:function(){return $("li.multiselect-all",this.$ul).length>0},updateSelectAll:function(){if(this.hasSelectAll()){var allBoxes=$("li:not(.multiselect-item):not(.filter-hidden) input:enabled",this.$ul),allBoxesLength=allBoxes.length,checkedBoxesLength=allBoxes.filter(":checked").length,selectAllLi=$("li.multiselect-all",this.$ul),selectAllInput=selectAllLi.find("input");checkedBoxesLength>0&&checkedBoxesLength===allBoxesLength?(selectAllInput.prop("checked",!0),selectAllLi.addClass(this.options.selectedClass),this.options.onSelectAll()):(selectAllInput.prop("checked",!1),selectAllLi.removeClass(this.options.selectedClass))}},updateButtonText:function(){var options=this.getSelected();this.options.enableHTML?$(".multiselect .multiselect-selected-text",this.$container).html(this.options.buttonText(options,this.$select)):$(".multiselect .multiselect-selected-text",this.$container).text(this.options.buttonText(options,this.$select)),$(".multiselect",this.$container).attr("title",this.options.buttonTitle(options,this.$select))},getSelected:function(){return $("option",this.$select).filter(":selected")},getOptionByValue:function(value){for(var options=$("option",this.$select),valueToCompare=value.toString(),i=0;i<options.length;i+=1){var option=options[i];if(option.value===valueToCompare)return $(option)}},getInputByValue:function(value){for(var checkboxes=$("li input",this.$ul),valueToCompare=value.toString(),i=0;i<checkboxes.length;i+=1){var checkbox=checkboxes[i];if(checkbox.value===valueToCompare)return $(checkbox)}},updateOriginalOptions:function(){this.originalOptions=this.$select.clone()[0].options},asyncFunction:function(callback,timeout,self){var args=Array.prototype.slice.call(arguments,3);return setTimeout(function(){callback.apply(self||window,args)},timeout)},setAllSelectedText:function(allSelectedText){this.options.allSelectedText=allSelectedText,this.updateButtonText()}},$.fn.multiselect=function(option,parameter,extraOptions){return this.each(function(){var data=$(this).data("multiselect"),options="object"==typeof option&&option;data||(data=new Multiselect(this,options),$(this).data("multiselect",data)),"string"==typeof option&&(data[option](parameter,extraOptions),"destroy"===option&&$(this).data("multiselect",!1))})},$.fn.multiselect.Constructor=Multiselect,$(function(){$("select[data-role=multiselect]").multiselect()})}(window.jQuery);